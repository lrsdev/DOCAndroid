apply plugin: 'com.android.application'

/**
 *  Two build flavors allow versions to be built utilising the dev or production api. Buildconfig
 *  variables are set for content provider authorities, and synchronisation account types. This allows
 *  the DogBeachesContract authority, and sync adapter/authenticator account details to be set at
 *  runtime in the main activity and their respective XML resources.
 */
def final appId = 'io.github.lrsdev.dogbeaches'
android {
    signingConfigs {
    }
    compileSdkVersion 22
    buildToolsVersion "23.0.1"
    defaultConfig {
        applicationId = appId
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            versionNameSuffix "-DEBUG"
        }
    }
    productFlavors {
        dev {
            applicationId appId + ".dev"
            buildConfigField "String", "SYNC_ACCOUNT_TYPE", "\"${applicationId}\""
            buildConfigField "String", "AUTHORITY", "\"${applicationId}.contentprovider.DogBeachesProvider\""
            buildConfigField "String", "API_END_POINT", '"http://dev.doguser.stewpot.nz"'
            resValue "string", "account_type", "${applicationId}"
            resValue "string", "authority", "${applicationId}.contentprovider.DogBeachesProvider"
            resValue "string", "app_name", "D&B Dev"
        }
        prod {
            applicationId appId + ".prod"
            buildConfigField "String", "SYNC_ACCOUNT_TYPE", "\"${applicationId}\""
            buildConfigField "String", "AUTHORITY", "\"${applicationId}.contentprovider.DogBeachesProvider\""
            buildConfigField "String", "API_END_POINT", '"http://doguser.stewpot.nz"'
            resValue "string", "account_type", "${applicationId}"
            resValue "string", "authority", "${applicationId}.contentprovider.DogBeachesProvider"
            resValue "string", "app_name", "Dogs & Beaches"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile('com.mapbox.mapboxsdk:mapbox-android-sdk:0.7.4@aar') {
        transitive = true
    }
    compile 'com.github.ganfra:material-spinner:1.1.0'
    compile 'com.android.support:design:22.2.1'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.google.android.gms:play-services:7.5.0'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.okio:okio:1.4.0'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.github.clans:fab:1.6.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
